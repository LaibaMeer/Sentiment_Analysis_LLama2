# -*- coding: utf-8 -*-
"""SentimentAnalysis_Llama2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/100emZw7qXwU2l7Bf3j74ppBRHqj3kfFI
"""

!pip install -q transformers einops accelerate langchain bitsandbytes

"""#Data Preprocessing"""

import pandas as pd
data = pd.read_csv('amazon_reviews.csv')

data.head()

data.drop_duplicates()

data['reviewText'] = data['reviewText'].str.lower()
data['reviewText'] = data['reviewText'].str.replace('[^\w\s]','')
data['reviewText'] = data['reviewText'].str.replace('\s+', '')
data['reviewerName'] = data['reviewerName'].str.replace('[^\w\s]','')
data['reviewerName'] = data['reviewerName'].str.replace('\s+', '')
data['reviewerName'] = data['reviewerName'].str.capitalize()
data['reviewerName'] = data['reviewerName'].str.replace('"',' ')

data[5:17]

text = data['reviewText']

text.drop([0], inplace=True)

first_10 = text[:10]

"""#Aspect based Sentiment Analysis:
## The sentiement ['positive', 'negative','neutral'] will be generated for each aspect of the input text:
"""

!huggingface-cli login

!pip install sentencepiece

!pip install langchain
!pip install langchain_community

!pip install accelerate

from langchain import HuggingFacePipeline
from transformers import AutoTokenizer
import transformers
import torch

model = "meta-llama/Llama-2-7b-chat-hf"

tokenizer = AutoTokenizer.from_pretrained(model)

pipeline = transformers.pipeline(
    "text-generation", #task
    model=model,
    tokenizer=tokenizer,
    torch_dtype=torch.bfloat16,
    trust_remote_code=True,
    device_map="auto",
    max_length=1000,
    do_sample=True,
    top_k=10,

    num_return_sequences=1,
    eos_token_id=tokenizer.eos_token_id
)

llm = HuggingFacePipeline(pipeline = pipeline, model_kwargs = {'temperature':0})

from langchain import PromptTemplate,  LLMChain

template = """
              Recognize all aspect terms with their corresponding sentiment polarity in the given review delimited by triple quotes. The aspect terms are nouns or phrases appearing in the review that indicate specific aspects or features of the product/service. Determine the sentiment polarity from the options [\"positive\", \"negative\", \"neutral\"]. Answer in the format [\"aspect\", \"sentiment\"] without any explanation. If no aspect term exists, then only answer \"[]\"."
               ```{text}```
           """

prompt = PromptTemplate(template=template, input_variables=["text"])

llm_chain = LLMChain(prompt=prompt, llm=llm)

import pandas as pd
df = pd.read_csv('new.csv')



#text = """
# Don't buy this car as I already made a mistake buying that car of model XZ+O.
# Within 1 week back sensor did not work.
# Irritating noise produce during back gear applied. And when I inform to the company they work as laziness. No speed-up process for a new car as I bought. Many times I mail to their customer care, no response comes. The only e generated mail comes from their side. No hope whether my car is well. or not. I suggest never buy that car. I already waste my 13 lakh rupees. Don't buy
# """

print(llm_chain.run(first_10))

text
print(llm_chain.run(text))

text = data['reviewText']

